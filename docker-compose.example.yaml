version: '2'
services:
  # web:
  #   build
  #   ports:
  #     - "5000:5000"
  #   volumes:
  #     - .:/code
  #     - /var/run/docker.sock:/var/run/docker.sock
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
  kafka:
    image: "wurstmeister/kafka:0.10.2.1"
    ports:
      - "9092"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      HOSTNAME_COMMAND: "route -n | awk '/UG[ \t]/{print $$2}'"
      KAFKA_MESSAGE_MAX_BYTES: 2000000
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_LOG_CLEANER_ENABLE: 'true'
      KAFKA_LOG_CLEANER_DELETE_RETENTION_MS: 14400000 # 4 hours
      KAFKA_JMX_OPTS: "-Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Djava.rmi.server.hostname=127.0.0.1 -Dcom.sun.management.jmxremote.rmi.port=1099"
      JMX_PORT: 1099
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  kafka_manager:
    image: 'sheepkiller/kafka-manager'
    environment:
      ZK_HOSTS: zookeeper:2181
      APPLICATION_SECRET: letmein
      KM_ARGS: -Djava.net.preferIPv4Stack=true
    ports:
      - 9000:9000
  redis:
    image: redis:3.2.9-alpine
    ports:
      - "6379:6379"
      - 9000:9000
    labels:
      com.example.description: "Database volume"
      com.example.department: "IT/Ops"
      com.example.label-with-empty-value: ""
